#yaml-language-server: $schema=hhttps://json.schemastore.org/github-workflow.json
name: Deploy App

on:
  workflow_dispatch:

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    environment: Development
    permissions:
      id-token: write
      contents: read
    outputs:
      appServiceName: ${{ steps.deploy.outputs.appServiceName }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Authenticate with Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
    # Deploy using the Azure CLI (developer-friendly)
    - name: Deploy services (AzCLI)
      id: deploy
      run: ./scripts/deploy-bicep.sh -r $RESOURCE_GROUP -l $LOCATION -n $APP_NAME
      env:
        RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
        LOCATION: ${{ vars.AZURE_LOCATION }}
        APP_NAME: ${{ vars.AZURE_WEBAPP_NAME }}

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: src/global.json
      
      - name: Set up dependency caching for faster builds
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build and package 
        run: dotnet build --configuration Release /t:Package /p:PackageFolder=${{ runner.temp }}/pkg
        working-directory: ${{ github.workspace }}/src

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: ${{ runner.temp }}/pkg/publish.zip
          retention-days: 1
          if-no-files-found: error

  deploy-app:
    permissions:
      contents: none
      id-token: write
    runs-on: ubuntu-latest
    needs: [build, deploy-infrastructure]
    environment:
      name: 'Development'
      url: 'https://${{ needs.deploy-infrastructure.outputs.appServiceName }}.azurewebsites.net'
      # ${{ steps.deploy-to-webapp2.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: package
          path: ${{ runner.temp }}/package
          
      - name: Authenticate with Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Deploy using the Azure CLI (developer-friendly)
      - name: Deploy to Azure Web App (AzCLI)
        id: deploy-to-webapp
        run: ./scripts/deploy-app.sh -r $RESOURCE_GROUP -l $PACKAGE -n $APP_SERVICE
        env:
          RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
          PACKAGE: ${{ runner.temp }}/package/publish.zip
          APP_SERVICE: ${{ needs.deploy-infrastructure.outputs.appServiceName }}